// Triangles
@mixin triangle_helper($size, $color, $margin, $side, $align) {
  @if $side == 'top' {
    top: -(2 * $size);
    border-bottom-color: $color;
  }

  @if $side == 'bottom' {
    bottom: -(2 * $size);
    border-top-color: $color;
  }

  @if $side == 'left' {
    left: -(2 * $size);
    border-right-color: $color;
  }

  @if $side == 'right' {
    right: -(2 * $size);
    border-left-color: $color;
  }

  @if $side == 'right' or $side == 'left' {
    @if $align == 'center' {
      top: 50%;
      margin-top: -$size;
    }

    @else if $align == 'top' {
      top: $margin;
    }

    @else if $align == 'bottom' {
      bottom: $margin;
    }
  }

  @if $side == 'bottom' or $side == 'top' {
    @if $align == 'center' {
      right: 50%;
      margin-right: -$size;
    }

    @else if $align == 'left' {
      left: $margin;
    }

    @else if $align == 'right' {
      right: $margin;
    }
  }
}

@mixin triangle($side: right, $align: center, $size: 20px, $color: $color-white, $border-color: none, $border-size: 1px) {
  $selector: '&:after, &:before';

  @if $border-color == 'none' {
    $selector: '&:after';
  }

  #{$selector} {
    position: absolute;
    content: '';
    height: 0;
    width: 0;
    border: solid transparent;
    pointer-events: none;
    visibility: visible;
  }

  &:after {
    @include triangle_helper($size, $color, $size, $side, $align);
    border-width: $size;
  }

  @if $border-color != 'none' {
    &:before {
      @include triangle_helper($size + $border-size, $border-color, $size - $border-size, $side, $align);
      border-width: $border-size + $size;
    }
  }
}

// Usage Example
// div {
//   @include triangle('top','left', ($base-spacing / 2), $color-brand-primary);
// }

// div {
//   &.with-border {
//     @include triangle('top','left', 10px, #eee, #4fade3, 6px);
//   }
// }
